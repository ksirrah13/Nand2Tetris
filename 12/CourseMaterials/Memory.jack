// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * Memory operations library.
 */ 
class Memory {

    static int heapPointer;

    /** Initializes memory parameters. */
    function void init() {
        let heapPointer = 2048;
        return;
    }

    /** Returns the value of the main memory at the given address. */
    function int peek(int address) {
        var Array mem;
        let mem = 0;
        return mem[address];
    }

    /** Sets the value of the main memory at this address
     *  to the given value. */
    function void poke(int address, int value) {
        var Array mem;
        let mem = 0;
        let mem[address] = value;
        return;
    }

    /** finds and allocates from the heap a memory block of the 
     *  specified size and returns a reference to its base address. */
    function int alloc(int size) {
        var int allocated;
        let allocated = heapPointer;
        let heapPointer = heapPointer + size;
        return allocated;
    }

    /** De-allocates the given object and frees its space. */
    function void deAlloc(int object) {
        return;
    }    
}
